{"ast":null,"code":"import axios from 'axios';\n// Change the API_URL to the correct location of the backend API before deploying the app\nconst API_URL = 'https://tbonebrake.pythonanywhere.com/'; /* 'http://localhost:8000' http://127.0.0.1:8000 or  'https://yourPythonAnywhereName.pythonanywhere.com'*/\n\nexport class APIService {\n  constructor() {}\n  getMovie(param_pk) {\n    const url = `${API_URL}/api/movies/${param_pk}`;\n    let jwtToken = localStorage.getItem('access');\n    const headers = {\n      Authorization: `JWT ${jwtToken}`\n    };\n    return axios.get(url, {\n      headers: headers\n    });\n  }\n  getMovieList() {\n    const url = `${API_URL}/api/movies/`;\n    let jwtToken = localStorage.getItem('access');\n    const headers = {\n      Authorization: `JWT ${jwtToken}`\n    };\n    return axios.get(url, {\n      headers: headers\n    });\n  }\n  addNewMovie(movie) {\n    const url = `${API_URL}/api/movies/`;\n    let jwtToken = localStorage.getItem('access');\n    const headers = {\n      Authorization: `JWT ${jwtToken}`\n    };\n    return axios.post(url, movie, {\n      headers: headers\n    });\n  }\n  updateMovie(movie) {\n    const url = `${API_URL}/api/movies/${movie.pk}`;\n    let jwtToken = localStorage.getItem('access');\n    const headers = {\n      Authorization: `JWT ${jwtToken}`\n    };\n    return axios.put(url, movie, {\n      headers: headers\n    });\n  }\n  deleteMovie(movie_Pk) {\n    const url = `${API_URL}/api/movies/${movie_Pk}`;\n    let jwtToken = localStorage.getItem('access');\n    const headers = {\n      Authorization: `JWT ${jwtToken}`\n    };\n    return axios.delete(url, {\n      headers: headers\n    });\n  }\n  authenticateLogin(credentials) {\n    const url = `${API_URL}/api/`;\n    return axios.post(url, credentials);\n  }\n  registerUser(credentials) {\n    const url = `${API_URL}/register/`;\n    credentials.customusername = credentials.username;\n    return axios.post(url, credentials);\n  }\n}","map":{"version":3,"names":["axios","API_URL","APIService","constructor","getMovie","param_pk","url","jwtToken","localStorage","getItem","headers","Authorization","get","getMovieList","addNewMovie","movie","post","updateMovie","pk","put","deleteMovie","movie_Pk","delete","authenticateLogin","credentials","registerUser","customusername","username"],"sources":["/Users/tbonebrake/Desktop/FullStackDevelopment/movies/movie_fe/src/http/APIService.js"],"sourcesContent":["import axios from 'axios';\n// Change the API_URL to the correct location of the backend API before deploying the app\nconst API_URL = 'https://tbonebrake.pythonanywhere.com/';/* 'http://localhost:8000' http://127.0.0.1:8000 or  'https://yourPythonAnywhereName.pythonanywhere.com'*/\n\n\nexport class APIService {\n  constructor() {\n  }\n\n  getMovie(param_pk) {\n    const url = `${API_URL}/api/movies/${param_pk}`;\n    let jwtToken = localStorage.getItem('access');\n    const headers = {Authorization: `JWT ${jwtToken}`};\n    return axios.get(url, {headers: headers});\n  }\n  \n  getMovieList() {\n    const url = `${API_URL}/api/movies/`;\n    let jwtToken = localStorage.getItem('access');\n    const headers = {Authorization: `JWT ${jwtToken}`};\n    return axios.get(url, {headers: headers});\n  }\n\n  addNewMovie(movie){\n    const url = `${API_URL}/api/movies/`;\n    let jwtToken = localStorage.getItem('access');\n    const headers = {Authorization: `JWT ${jwtToken}`};\n    return axios.post(url, movie, {headers: headers});\n  }\n\n  updateMovie(movie){\n    const url = `${API_URL}/api/movies/${movie.pk}`;\n    let jwtToken = localStorage.getItem('access');\n    const headers = {Authorization: `JWT ${jwtToken}`};\n    return axios.put(url, movie, {headers: headers});\n  }\n\n  deleteMovie(movie_Pk){\n    const url = `${API_URL}/api/movies/${movie_Pk}`;\n    let jwtToken = localStorage.getItem('access');\n    const headers = {Authorization: `JWT ${jwtToken}`};\n    return axios.delete(url, {headers: headers});\n  }\n\n  authenticateLogin(credentials) {\n    const url = `${API_URL}/api/`;\n    return axios.post(url, credentials);\n  }\n\n  registerUser(credentials) {\n     const url = `${API_URL}/register/`;\n     credentials.customusername = credentials.username\n     return axios.post(url, credentials);\n  }\n}\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB;AACA,MAAMC,OAAO,GAAG,wCAAwC,CAAC;;AAGzD,OAAO,MAAMC,UAAU,CAAC;EACtBC,WAAWA,CAAA,EAAG,CACd;EAEAC,QAAQA,CAACC,QAAQ,EAAE;IACjB,MAAMC,GAAG,GAAI,GAAEL,OAAQ,eAAcI,QAAS,EAAC;IAC/C,IAAIE,QAAQ,GAAGC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC;IAC7C,MAAMC,OAAO,GAAG;MAACC,aAAa,EAAG,OAAMJ,QAAS;IAAC,CAAC;IAClD,OAAOP,KAAK,CAACY,GAAG,CAACN,GAAG,EAAE;MAACI,OAAO,EAAEA;IAAO,CAAC,CAAC;EAC3C;EAEAG,YAAYA,CAAA,EAAG;IACb,MAAMP,GAAG,GAAI,GAAEL,OAAQ,cAAa;IACpC,IAAIM,QAAQ,GAAGC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC;IAC7C,MAAMC,OAAO,GAAG;MAACC,aAAa,EAAG,OAAMJ,QAAS;IAAC,CAAC;IAClD,OAAOP,KAAK,CAACY,GAAG,CAACN,GAAG,EAAE;MAACI,OAAO,EAAEA;IAAO,CAAC,CAAC;EAC3C;EAEAI,WAAWA,CAACC,KAAK,EAAC;IAChB,MAAMT,GAAG,GAAI,GAAEL,OAAQ,cAAa;IACpC,IAAIM,QAAQ,GAAGC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC;IAC7C,MAAMC,OAAO,GAAG;MAACC,aAAa,EAAG,OAAMJ,QAAS;IAAC,CAAC;IAClD,OAAOP,KAAK,CAACgB,IAAI,CAACV,GAAG,EAAES,KAAK,EAAE;MAACL,OAAO,EAAEA;IAAO,CAAC,CAAC;EACnD;EAEAO,WAAWA,CAACF,KAAK,EAAC;IAChB,MAAMT,GAAG,GAAI,GAAEL,OAAQ,eAAcc,KAAK,CAACG,EAAG,EAAC;IAC/C,IAAIX,QAAQ,GAAGC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC;IAC7C,MAAMC,OAAO,GAAG;MAACC,aAAa,EAAG,OAAMJ,QAAS;IAAC,CAAC;IAClD,OAAOP,KAAK,CAACmB,GAAG,CAACb,GAAG,EAAES,KAAK,EAAE;MAACL,OAAO,EAAEA;IAAO,CAAC,CAAC;EAClD;EAEAU,WAAWA,CAACC,QAAQ,EAAC;IACnB,MAAMf,GAAG,GAAI,GAAEL,OAAQ,eAAcoB,QAAS,EAAC;IAC/C,IAAId,QAAQ,GAAGC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC;IAC7C,MAAMC,OAAO,GAAG;MAACC,aAAa,EAAG,OAAMJ,QAAS;IAAC,CAAC;IAClD,OAAOP,KAAK,CAACsB,MAAM,CAAChB,GAAG,EAAE;MAACI,OAAO,EAAEA;IAAO,CAAC,CAAC;EAC9C;EAEAa,iBAAiBA,CAACC,WAAW,EAAE;IAC7B,MAAMlB,GAAG,GAAI,GAAEL,OAAQ,OAAM;IAC7B,OAAOD,KAAK,CAACgB,IAAI,CAACV,GAAG,EAAEkB,WAAW,CAAC;EACrC;EAEAC,YAAYA,CAACD,WAAW,EAAE;IACvB,MAAMlB,GAAG,GAAI,GAAEL,OAAQ,YAAW;IAClCuB,WAAW,CAACE,cAAc,GAAGF,WAAW,CAACG,QAAQ;IACjD,OAAO3B,KAAK,CAACgB,IAAI,CAACV,GAAG,EAAEkB,WAAW,CAAC;EACtC;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}