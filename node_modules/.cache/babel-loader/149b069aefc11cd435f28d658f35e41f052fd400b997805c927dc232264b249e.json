{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport router from '../router';\nimport { APIService } from '../http/APIService';\nconst apiService = new APIService();\nexport default {\n  //prevent user from accessing this page if not authorized\n  beforeCreate() {\n    if (localStorage.getItem(\"isAuthenticated\") && JSON.parse(localStorage.getItem(\"isAuthenticated\")) === true) {\n      this.authenticated = true;\n    } else {\n      this.authenticated = false;\n    }\n    if (this.authenticated === false) {\n      router.push(\"/auth\");\n    }\n  },\n  data() {\n    return {\n      showError: false,\n      movie: {},\n      pageTitle: \"Add New Movie\",\n      isUpdate: false,\n      showMsg: '',\n      authenticated: false\n    };\n  },\n  methods: {\n    createMovie() {\n      apiService.addNewMovie(this.movie).then(response => {\n        if (response.status === 201) {\n          this.movie = response.data;\n          this.showMsg = \"\";\n          router.push('/movie-list/new');\n        } else {\n          this.showMsg = \"error\";\n        }\n      }).catch(error => {\n        if (error.response.status === 401) {\n          // \"not authorized\"\n          router.push(\"/auth\");\n        } else if (error.response.status === 400) {\n          //\"bad request\"\n          this.showMsg = \"requestError\";\n        } else {\n          this.showMsg = \"error\";\n        }\n      });\n    },\n    cancelOperation() {\n      router.push(\"/movie-list\");\n    },\n    updateMovie() {\n      apiService.updateMovie(this.movie).then(response => {\n        if (response.status === 200) {\n          this.movie = response.data;\n          router.push('/movie-list/update');\n        } else {\n          this.showMsg = \"error\";\n        }\n      }).catch(error => {\n        if (error.response.status === 401) {\n          // \"not authorized\"\n          router.push(\"/auth\");\n        } else if (error.response.status === 400) {\n          //\"bad request\"\n          this.showMsg = \"requestError\";\n        } else {\n          this.showMsg = \"error\";\n        }\n      });\n    }\n  },\n  mounted() {\n    if (this.$route.params.pk) {\n      this.pageTitle = \"Edit Movie\";\n      this.isUpdate = true;\n      apiService.getMovie(this.$route.params.pk).then(response => {\n        this.movie = response.data;\n      }).catch(error => {\n        if (error.response.status === 401) {\n          // \"not authorized\"\n          router.push(\"/auth\");\n        } else {\n          this.showMsg = \"error\";\n          router.push(\"/auth\");\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["router","APIService","apiService","beforeCreate","localStorage","getItem","JSON","parse","authenticated","push","data","showError","movie","pageTitle","isUpdate","showMsg","methods","createMovie","addNewMovie","then","response","status","catch","error","cancelOperation","updateMovie","mounted","$route","params","pk","getMovie"],"sources":["/Users/tbonebrake/Desktop/FullStackDevelopment/movies/movie_fe/src/components/MovieCreate.vue"],"sourcesContent":["<template>\n    <div class=\"container-fluid\">\n      <div class=\"row align-items-center justify-content-center\">\n        <div class=\" col align-items-center\">\n          <div class=\"row align-items-center justify-content-center\">\n            <div class=\"col col-12 col-sm-10 col-md-10 col-lg-6\">\n              <div class=\"alert alert-danger shadow\" role=\"alert\"\n              v-if=\"showMsg === 'error'\">\n                Please verify Movie Information\n              </div>\n              <div class=\"alert alert-danger shadow\" role=\"alert\"\n              v-if=\"showMsg === 'requestError'\">\n                Please verify Movie Information - data formatted incorrectly\n              </div>\n            </div>\n          </div>\n          <div class=\"row align-items-center justify-content-center\">\n            <div class=\"col col-12 col-sm-10 col-md-10 col-lg-6 align-items-center\">\n              <div class=\"card\">\n                <div class=\"card-header\">{{pageTitle}}</div>\n                <div class=\"card-body\">\n                  <form ref=\"form\">\n                    <div class=\"container-fluid\">\n                      <div class=\"form-group row justify-content-around py-2\">\n                        <label class=\"col-5\">Name</label>\n                        <div class=\"col col-7\">\n                          <input v-model=\"movie.name\" type=\"text\" class=\"form-control-sm form-control\">\n                        </div>\n                      </div>\n                      <div class=\"form-group row justify-content-around py-2\">\n                        <label class=\"col-5\">Description</label>\n                        <div class=\"col col-7\">\n                          <input v-model=\"movie.description\" type=\"text\" class=\"form-control-sm form-control\">\n                        </div>\n                      </div>\n                      <div class=\"form-group row justify-content-around py-2\">\n                        <label class=\"col-5\">Year</label>\n                        <div class=\"col col-7\">\n                          <input v-model=\"movie.year\" type=\"text\" class=\"form-control-sm form-control\">\n                        </div>\n                      </div>\n                      <div class=\"form-group row justify-content-around py-2\">\n                        <label class=\"col-5\">Rating</label>\n                        <div class=\"col col-7\">\n                          <input v-model=\"movie.rating\" type=\"text\" class=\"form-control-sm form-control\">\n                        </div>\n                      </div>\n                      <div class=\"row justify-content-around\">\n                        <div v-if=\"!isUpdate\" type=\"button\" class=\"btn btn-primary col-4\" @click=\"createMovie\">Save</div>\n                        <div v-if=\"isUpdate\" type=\"button\" class=\"btn btn-primary col-4\" @click=\"updateMovie\">Update</div>\n                        <div type=\"button\" class=\"btn btn-secondary col-4\" @click=\"cancelOperation\">Cancel</div>\n                      </div>\n                    </div>\n                  </form>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </template>\n  <script>\n    import router from '../router';\n    import {APIService} from '../http/APIService';\n    const apiService = new APIService();\n  \n  export default {\n    //prevent user from accessing this page if not authorized\n    beforeCreate() {\n    if (localStorage.getItem(\"isAuthenticated\") &&\n        JSON.parse(localStorage.getItem(\"isAuthenticated\")) === true ){\n          this.authenticated = true\n        }\n        else {\n          this.authenticated = false\n        }\n        if(this.authenticated===false){\n            router.push(\"/auth\");\n          }\n   },\n    data() {\n        return {\n          showError: false,\n          movie: {},\n          pageTitle: \"Add New Movie\",\n          isUpdate: false,\n          showMsg: '',\n          authenticated: false\n        };\n    },\n      methods: {\n\n        createMovie() {\n          apiService.addNewMovie(this.movie).then(response => {\n            if (response.status === 201) {\n              this.movie = response.data;\n              this.showMsg = \"\";\n              router.push('/movie-list/new');\n            }else{\n              this.showMsg = \"error\";\n            }\n          }).catch(error => {\n\n            if (error.response.status === 401) { // \"not authorized\"\n              router.push(\"/auth\");\n            }else if (error.response.status === 400) { //\"bad request\"\n              this.showMsg = \"requestError\";\n            }else{\n              this.showMsg = \"error\";\n            }\n          });\n      },\n        cancelOperation(){\n          router.push(\"/movie-list\");\n        },\n        updateMovie() {\n          apiService.updateMovie(this.movie).then(response => {\n            if (response.status === 200) {\n              this.movie = response.data;\n              router.push('/movie-list/update');\n            }else{\n              this.showMsg = \"error\";\n            }\n          }).catch(error => {\n            if (error.response.status === 401) { // \"not authorized\"\n              router.push(\"/auth\");\n            }else if (error.response.status === 400) { //\"bad request\"\n              this.showMsg = \"requestError\";\n            }else{\n              this.showMsg = \"error\";\n            }\n          });\n      }\n      },\n      mounted() {\n        if (this.$route.params.pk) {\n          this.pageTitle = \"Edit Movie\";\n          this.isUpdate = true;\n          apiService.getMovie(this.$route.params.pk).then(response => {\n            this.movie = response.data;\n          }).catch(error => {\n            if (error.response.status === 401) { // \"not authorized\"\n              router.push(\"/auth\");\n            }else{\n              this.showMsg = \"error\";\n              router.push(\"/auth\");\n            }\n          });\n        }\n      },\n  }\n  </script>\n  <style>\n  </style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}