{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport router from \"./router\";\nimport { APIService } from \"./http/APIService\";\nconst apiService = new APIService();\nexport default {\n  name: 'App',\n  //check for auth token to determine if user already logged in\n  beforeCreate() {\n    if (localStorage.getItem(\"isAuthenticated\") && JSON.parse(localStorage.getItem(\"isAuthenticated\")) === true) {\n      this.authenticated = true;\n    } else {\n      this.authenticated = false;\n    }\n  },\n  props: {\n    msg: String\n  },\n  data: () => ({\n    authenticated: false,\n    dialog: false,\n    uName: \"Guest\",\n    menu: [],\n    showMobileMenu: false\n  }),\n  mounted() {\n    if (localStorage.getItem(\"isAuthenticated\") && JSON.parse(localStorage.getItem(\"isAuthenticated\")) === true) {\n      this.authenticated = true;\n      this.uName = localStorage.getItem(\"log_user\");\n    } else {\n      this.authenticated = false;\n    }\n  },\n  methods: {\n    getUser() {\n      if (localStorage.getItem(\"isAuthenticated\") && JSON.parse(localStorage.getItem(\"isAuthenticated\")) === true) {\n        this.validUserName = JSON.parse(localStorage.getItem(\"log_user\"));\n      }\n    },\n    logout() {\n      //clear local storage items and set authenticated to false\n      localStorage.removeItem(\"log_user\");\n      localStorage.removeItem(\"access\");\n      localStorage.removeItem(\"refresh\");\n      localStorage.setItem(\"isAuthenticated\", false);\n      this.authenticated = false;\n      window.location = \"/\";\n    },\n    home() {\n      window.location = \"/\";\n    },\n    register() {\n      router.push(\"/register\");\n    },\n    login() {\n      router.push(\"/auth\");\n    },\n    /* Toggle between showing and hiding the navigation menu links when the user clicks on the hamburger menu / bar icon */\n    showMenu() {\n      this.showMobileMenu = !this.showMobileMenu;\n    }\n  }\n};","map":{"version":3,"names":["router","APIService","apiService","name","beforeCreate","localStorage","getItem","JSON","parse","authenticated","props","msg","String","data","dialog","uName","menu","showMobileMenu","mounted","methods","getUser","validUserName","logout","removeItem","setItem","window","location","home","register","push","login","showMenu"],"sources":["/Users/tbonebrake/Desktop/FullStackDevelopment/movies/movie_fe/src/App.vue"],"sourcesContent":["<template>\n  <div class=\"d-md-none\">\n      <!--Mobile - Top Navigation Menu-->\n        <div class=\"nav-menu float-right\" @click=\"showMenu\">\n                <font-awesome-icon icon=\"bars\"/>\n          <div class=\"nav-content\"\n                  :class=\"this.showMobileMenu ? 'open-menu' : 'closed-menu'\">\n              <ul class=\"nav-items\">\n                  <li> <router-link to=\"/\">Home</router-link></li>\n                  <li v-if=\"this.authenticated\">\n                      <router-link :to=\"{name: 'MovieList'}\">Movies</router-link>\n                  </li>\n                  <li v-else @click=\"login\">\n                      <router-link :to=\"{name: 'Auth'}\">Log in</router-link>\n                  </li>\n                  <li v-if=\"!this.authenticated\" @click=\"register\">\n                      <router-link :to=\"{name: 'Register'}\">Register</router-link>\n                  </li>\n                  <li v-else @click=\"logout\">\n                      <router-link :to=\"{name: 'Auth'}\">Logout</router-link>\n                  </li>\n              </ul>\n          </div>\n      </div>\n  </div>\n  <!--Non mobile navigation-->\n  <div class=\"d-none d-xl-block d-lg-block d-md-block\">\n      <ul class=\"nav justify-content-center\">\n          <li class=\"nav-item active\">\n              <router-link to=\"/\">Home</router-link>\n          </li>\n          <li class=\"nav-item\" v-if=\"this.authenticated\">\n              |\n              <router-link :to=\"{name: 'MovieList'}\">Movies</router-link>\n          </li>\n          <li class=\"nav-item\" v-if=\"!this.authenticated\" @click=\"login\">\n              |\n              <router-link :to=\"{name: 'Auth'}\">Log in</router-link>\n          </li>\n          <li class=\"nav-item\" v-if=\"!this.authenticated\" @click=\"register\">\n              |\n              <router-link :to=\"{name: 'Register'}\">Register</router-link>\n          </li>\n          <li class=\"nav-item  .justify-content-end\" v-if=\"this.authenticated\" @click=\"logout\">\n              |\n              <router-link :to=\"{name: 'Auth'}\">Logout</router-link>\n          </li>\n      </ul>\n  </div>\n  <router-view/>\n</template>\n<script>\n  import router from \"./router\";\n  import {APIService} from \"./http/APIService\";\n\n  const apiService = new APIService();\n\n  export default {\n      name: 'App',\n      //check for auth token to determine if user already logged in\n      beforeCreate() {\n          if (localStorage.getItem(\"isAuthenticated\") &&\n              JSON.parse(localStorage.getItem(\"isAuthenticated\")) === true) {\n              this.authenticated = true\n          } else {\n              this.authenticated = false\n          }\n      },\n      props: {\n          msg: String\n      },\n      data: () => ({\n          authenticated: false,\n          dialog: false,\n          uName: \"Guest\",\n          menu: [],\n          showMobileMenu: false,\n      }),\n      mounted() {\n          if (localStorage.getItem(\"isAuthenticated\") &&\n              JSON.parse(localStorage.getItem(\"isAuthenticated\")) === true) {\n              this.authenticated = true\n              this.uName = localStorage.getItem(\"log_user\")\n          } else {\n              this.authenticated = false\n          }\n      },\n      methods: {\n          getUser() {\n              if (localStorage.getItem(\"isAuthenticated\") &&\n                  JSON.parse(localStorage.getItem(\"isAuthenticated\")) === true\n              ) {\n                  this.validUserName = JSON.parse(localStorage.getItem(\"log_user\"));\n              }\n          },\n          logout() {\n              //clear local storage items and set authenticated to false\n              localStorage.removeItem(\"log_user\");\n              localStorage.removeItem(\"access\");\n              localStorage.removeItem(\"refresh\");\n              localStorage.setItem(\"isAuthenticated\", false);\n              this.authenticated = false;\n              window.location = \"/\";\n          },\n          home() {\n              window.location = \"/\";\n          },\n          register() {\n              router.push(\"/register\");\n          },\n          login() {\n              router.push(\"/auth\");\n          },\n          /* Toggle between showing and hiding the navigation menu links when the user clicks on the hamburger menu / bar icon */\n          showMenu() {\n              this.showMobileMenu = !this.showMobileMenu;\n          },\n      }\n  }\n</script>\n\n<style lang=\"scss\">\n #app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n}\n.nav {\n  padding: 1em;\n  background-color: cadetblue;\n}\n li {\n    font-weight: bold;\n    color: #2c3e50;\n  }\n  a {\n    color: black;\n    padding: .5em;\n\n   &.router-link-exact-active {\n      color: #08492c;\n    }\n  }\n// Mobile version - hamburger menu\n@media screen and (max-width: 768px) {\n.nav-menu {\npadding-top: 10px;\npadding-right:10px;\nwidth: 100%;\nbackground-color: cadetblue;\ntext-align: end;\n}\nli {\n    font-weight: bold;\n    color: #2c3e50;\n  }\n  a {\n    color: black;\n    padding: .5em;\n\n   &.router-link-exact-active {\n      color: #08492c;\n    }\n  }\n.nav-items {\n  justify-content: left;\n  align-items: left;\n  list-style: none;\n}\n.open-menu {\nopacity: 1;\nheight: 60%;\n}\n.closed-menu {\nopacity: 0;\nheight: 20;\npadding: 0;\n}\n}\n</style>\n"],"mappings":";AAoDE,OAAOA,MAAK,MAAO,UAAU;AAC7B,SAAQC,UAAU,QAAO,mBAAmB;AAE5C,MAAMC,UAAS,GAAI,IAAID,UAAU,CAAC,CAAC;AAEnC,eAAe;EACXE,IAAI,EAAE,KAAK;EACX;EACAC,YAAYA,CAAA,EAAG;IACX,IAAIC,YAAY,CAACC,OAAO,CAAC,iBAAiB,KACtCC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC,MAAM,IAAI,EAAE;MAC9D,IAAI,CAACG,aAAY,GAAI,IAAG;IAC5B,OAAO;MACH,IAAI,CAACA,aAAY,GAAI,KAAI;IAC7B;EACJ,CAAC;EACDC,KAAK,EAAE;IACHC,GAAG,EAAEC;EACT,CAAC;EACDC,IAAI,EAAEA,CAAA,MAAO;IACTJ,aAAa,EAAE,KAAK;IACpBK,MAAM,EAAE,KAAK;IACbC,KAAK,EAAE,OAAO;IACdC,IAAI,EAAE,EAAE;IACRC,cAAc,EAAE;EACpB,CAAC,CAAC;EACFC,OAAOA,CAAA,EAAG;IACN,IAAIb,YAAY,CAACC,OAAO,CAAC,iBAAiB,KACtCC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC,MAAM,IAAI,EAAE;MAC9D,IAAI,CAACG,aAAY,GAAI,IAAG;MACxB,IAAI,CAACM,KAAI,GAAIV,YAAY,CAACC,OAAO,CAAC,UAAU;IAChD,OAAO;MACH,IAAI,CAACG,aAAY,GAAI,KAAI;IAC7B;EACJ,CAAC;EACDU,OAAO,EAAE;IACLC,OAAOA,CAAA,EAAG;MACN,IAAIf,YAAY,CAACC,OAAO,CAAC,iBAAiB,KACtCC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC,MAAM,IAAG,EAC7D;QACE,IAAI,CAACe,aAAY,GAAId,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CAAC;MACrE;IACJ,CAAC;IACDgB,MAAMA,CAAA,EAAG;MACL;MACAjB,YAAY,CAACkB,UAAU,CAAC,UAAU,CAAC;MACnClB,YAAY,CAACkB,UAAU,CAAC,QAAQ,CAAC;MACjClB,YAAY,CAACkB,UAAU,CAAC,SAAS,CAAC;MAClClB,YAAY,CAACmB,OAAO,CAAC,iBAAiB,EAAE,KAAK,CAAC;MAC9C,IAAI,CAACf,aAAY,GAAI,KAAK;MAC1BgB,MAAM,CAACC,QAAO,GAAI,GAAG;IACzB,CAAC;IACDC,IAAIA,CAAA,EAAG;MACHF,MAAM,CAACC,QAAO,GAAI,GAAG;IACzB,CAAC;IACDE,QAAQA,CAAA,EAAG;MACP5B,MAAM,CAAC6B,IAAI,CAAC,WAAW,CAAC;IAC5B,CAAC;IACDC,KAAKA,CAAA,EAAG;MACJ9B,MAAM,CAAC6B,IAAI,CAAC,OAAO,CAAC;IACxB,CAAC;IACD;IACAE,QAAQA,CAAA,EAAG;MACP,IAAI,CAACd,cAAa,GAAI,CAAC,IAAI,CAACA,cAAc;IAC9C;EACJ;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}